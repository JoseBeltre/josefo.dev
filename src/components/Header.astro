---
import { Image } from 'astro:assets'
import Logo from '../assets/logo.svg'
import MenuIcon from '../components/icons/MenuIcon.astro'
---

<header id="header" class="w-full fixed z-50 lg:flex lg:justify-center lg:pt-4">
  <div
    class="flex justify-between items-center p-4 transition-all duration-500 lg:gap-7 lg:w-fit lg:rounded-full lg:p-2 lg:text- lg:border lg:border-white/10"
  >
    <div class="bg-primary size-12 p-2 rounded-full z-10 lg:size-10 lg:p-1.5">
      <Image src={Logo} class="w-full h-full" alt="JosefoDev Logo" />
    </div>
    <label
      for="menu"
      class="peer grid place-content-center size-12 bg-gradient-to-r from-secondary/50 to-primary rounded-xl relative z-10 cursor-pointer lg:hidden"
    >
      <input id="menu" class="hidden" type="checkbox" />
      <div
        class="grid place-content-center bg-[#121212] rounded-xl size-11 -z-10"
      >
        <MenuIcon stroke={2} size={28} />
      </div>
    </label>
    <div
      class="absolute flex flex-col justify-center items-center gap-5 w-screen h-screen inset-0 bg-black/90 backdrop-blur-md translate-x-full peer-has-checked:translate-x-0 transition-transform lg:translate-x-0 lg:backdrop-blur-none lg:bg-transparent lg:w-fit lg:h-fit lg:flex-row lg:relative lg:gap-1"
    >
      <a class="menu-item" href="#inicio">Inicio</a>
      <a class="menu-item" href="#servicios">Servicios</a>
      <a class="menu-item" href="#proceso">Proceso</a>
      <a class="menu-item" href="#portfolio">Portfolio</a>
      <a class="menu-item" href="#sobre-mi">Sobre mí</a>
      <a
        class="menu-item max-lg:hover:text-transparent max-lg:hover:bg-gradient-to-r max-lg:hover:from-secondary max-lg:hover:to-accent max-lg:hover:bg-clip-text hover:font-bold before:content-['{_'] after:content-['_}'] before:invisible after:invisible hover:before:visible hover:after:visible bg-white text-black p-2 px-5 rounded-full font-semibold lg:ms-5 hover:bg-highlight transition-all lg:hover:font-medium"
        href="#contacto">Contáctame</a
      >
    </div>
  </div>
</header>

<script>
  const chk = document.getElementById('menu') as HTMLInputElement
  const menuItems = document.querySelectorAll('.menu-item')
  const header = document.querySelector('header div')
  let prevSelected: HTMLLinkElement | null = null
  const sections = document.querySelectorAll('section')
  const headerLinks = document.querySelectorAll(
    '.menu-item'
  ) as NodeListOf<HTMLLinkElement>

  // Lógica para abrir el menú en dispositivos móviles
  menuItems.forEach((item) => {
    item.addEventListener('click', () => {
      if (chk) chk.checked = false
    })
  })
  // Lógica para hacer que el menú tengaun background cuando se haga scroll
  function toggleHeaderBg() {
    window.addEventListener('scroll', () => {
      const windowScroll = window.scrollY || document.documentElement.scrollTop
      if (windowScroll > 5) {
        header!.classList.add('backdrop-blur-2xl', 'bg-[#121212]/60')
      } else {
        header!.classList.remove('backdrop-blur-2xl', 'bg-[#121212]/60')
      }
    })
  }
  toggleHeaderBg()

  // Lógica para resaltar el enlace del menú según la sección visible usando IntersectionObserver
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          headerLinks.forEach((link) => {
            const linkId = link.getAttribute('href')?.slice(1)
            if (linkId === entry.target.id) {
              if (prevSelected !== null) {
                prevSelected.classList.remove('selected')
              }
              link.classList.add('selected')
              prevSelected = link
            }
          })
        }
      })
    },
    {
      root: null,
      rootMargin: '-10% 0px -10% 0px',
      threshold: 0.1,
    }
  )
  // Observa cada sección para detectar cuando entra en el viewport
  sections.forEach((section) => {
    observer.observe(section)
  })
</script>
<script>
  import gsap from 'gsap'

  gsap.from('#header', {
    rotate: -10,
    y: -150,
    duration: 2,
    ease: 'elastic.out(1, 0.3),',
    delay: 0.5,
  })
</script>
