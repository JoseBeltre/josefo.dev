---
import { services } from '../../data/services'
import Badge from '../Badge.astro'
---

<section id="contacto" class="px-6 lg:px-0 lg:w-5xl lg:mb-20 xl:w-6xl">
  <Badge>Contacto</Badge>
  <h2 class="section-title">Â¿Tienes una idea de proyecto? Â¡ConÃ©ctemos!</h2>
  <form id="contact-form" class="grid gap-5 lg:grid-cols-2">
    <div class="grid lg:col-span-2">
      <label class="italic mb-2" for="client_name"
        >Tu nombre completo o el de tu negocio</label
      >
      <input
        id="client_name"
        name="client_name"
        class="text-sm border font-light p-4 border-white focus:border-accent focus:outline-none transition-colors"
        type="text"
        placeholder="ej. Pedro Marte o Mariano's Trattoria"
        required
      />
    </div>
    <div class="grid lg:col-span-2">
      <label class="italic mb-2" for="client_email">Tu correo electrÃ³nico</label
      >
      <input
        id="client_email"
        name="client_email"
        class="text-sm border font-light p-4 border-white focus:border-accent focus:outline-none transition-colors"
        type="email"
        placeholder="ej. jose@jose-web.com"
        required
      />
    </div>
    <div class="grid lg:col-span-1">
      <label class="italic mb-2" for="industry">Tipo de negocio</label>
      <input
        id="industry"
        name="industry"
        class="text-sm border font-light p-4 border-white focus:border-accent focus:outline-none transition-colors"
        type="text"
        placeholder="ej. BarberÃ­a, PizzerÃ­a, Dealer..."
        required
      />
    </div>
    <div class="grid lg:col-span-1">
      <label class="italic mb-2" for="service_type">Tipo de servicio</label>
      <select
        id="service_type"
        name="service_type"
        class="text-sm bg-accent h-14 text-white text-medium transition-colors ps-4 focus:outline-none cursor-pointer hover:bg-accent/80"
        required
      >
        {
          services.map((service) => (
            <option class="bg-white font-medium text-black" value={service.id}>
              {service.title}
            </option>
          ))
        }
        <option class="bg-white font-medium text-black" value="other"
          >Otro (Especificar en mensaje)</option
        >
      </select>
    </div>
    <div class="grid lg:col-span-2">
      <label class="italic mb-2" for="message">Describe tu proyecto</label>
      <textarea
        id="message"
        name="message"
        class="text-sm border font-light p-4 border-white focus:border-accent focus:outline-none transition-colors"
        placeholder="AquÃ­ puedes describir tu proyecto, dudas o un mensaje adicional que te gustarÃ­a agregar ^-^"
        rows="12"></textarea>
    </div>
    <input id="date" name="date" class="hidden" type="text" />
    <div class="grid lg:col-span-2">
      <button
        id="submit-btn"
        type="submit"
        class="g-recaptcha flex flex-row-reverse items-center justify-center py-3 px-6 text-sm cursor-pointer hover:scale-105 transition-all hover:tracking-wider bg-accent flex-1 gap-4"
        data-sitekey={import.meta.env.PUBLIC_RECAPTCHA_SITE_KEY}
        data-callback="onSubmit"
        >
        <span>(Enviar correo)</span>
        <div
          id="form-loader"
          class="size-5 rounded-full border-t-3 border-white animate-spin duration-100 hidden"
        >
        </div>
      </button>
      <p class="text-white/70 text-pretty text-sm mt-2">
        O escribeme directamente Â¡estoy dispuesto a responder todas tus dudas! <a
          class="text-white underline"
          href="mailto:contact@jose-web.com">contact@jose-web.com</a
        >
      </p>
    </div>
  </form>
</section>
<style is:global>
  .grecaptcha-badge{
    visibility: hidden !important;
  }
</style>
<script src="https://www.google.com/recaptcha/api.js" async defer></script>
<script>
  declare global {
    interface Window {
      grecaptcha: any;
      onSubmit: (token: string) => void
    }
  }
  import emailjs from '@emailjs/browser'

  const { PUBLIC_EMAILJS_KEY, PUBLIC_SERVICE_ID, PUBLIC_TEMPLATE_ID, PUBLIC_RECAPTCHA_SITE_KEY } =
    import.meta.env

  if (!PUBLIC_EMAILJS_KEY || !PUBLIC_SERVICE_ID || !PUBLIC_TEMPLATE_ID) {
    console.error('Faltan variables de entorno de EmailJS!!!')
  }

  if (!PUBLIC_RECAPTCHA_SITE_KEY) {
    console.error('Error en la SITEKEY DE RECAPTCHA')
  }

  function changeBtnStyles(state: boolean | null) {
    const btn = document.getElementById('submit-btn') as HTMLButtonElement
    const btnSpan = btn.querySelector('span') as HTMLElement
    btn.disabled = true
    btn.classList.remove('hover:scale-105', 'hover:tracking-wider', 'cursor-pointer')
    if (state === null) { // null = Cargando
      btnSpan.innerText = 'Enviando...'
    } else if (state === true) { // true = Enviado
      btnSpan.innerText = 'Â¡Enviado correctamente!'
      btn.classList.add('bg-green-700')
    } else { // false = Error
      btnSpan.innerText = 'ðŸ¥² Ha ocurrido un error, intente mÃ¡s tarde'
      btn.classList.add('bg-red-700')
    }
  }
  // Inicializar EmailJS
  emailjs.init(PUBLIC_EMAILJS_KEY)

  const form = document.getElementById('contact-form') as HTMLFormElement
  const dateInput = document.getElementById('date') as HTMLInputElement
  const loader = document.getElementById('form-loader') as HTMLElement

  // Esta funciÃ³n es llamada automÃ¡ticamente por reCAPTCHA V2 Invisible cuando el captcha se completa exitosamente.
  // El token es recibido como parÃ¡metro.
  async function onSubmit(token: string) {
    try {
      dateInput.value = new Date().toLocaleString()
      loader.classList.remove('hidden')
      changeBtnStyles(null)

      const result = await emailjs.sendForm(
        PUBLIC_SERVICE_ID,
        PUBLIC_TEMPLATE_ID,
        form,
      )

      if (result?.status === 200) {
        changeBtnStyles(true)
        form.reset()
      } else {
        throw new Error('Error al enviar el formulario')
      }
    } catch (error) {
      console.error(error)
      changeBtnStyles(false)
    } finally {
      loader.classList.add('hidden')
    }
  }

  const submitBtn = document.getElementById('submit-btn') as HTMLButtonElement
  submitBtn.addEventListener('click', (e) => e.preventDefault())

  // Hacer onSubmit global para que Google lo encuentre (es necesario)
  window.onSubmit = onSubmit
</script>

